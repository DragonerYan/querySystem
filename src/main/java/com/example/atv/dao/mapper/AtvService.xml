<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.atv.dao.mapper.AtvService">

    <select id="streetFillInfo" resultType="map" parameterType="map">
        select table2.street,IFNULL(fill_count,0) as fillCount,all_count as allCount,IFNULL(all_count-fill_count,all_count) as unfillCount from
            -- 当前区域账号下所有街道，以及街道中已经填报的社区
            (select community.street,count(*) as fill_count from community,community_basic
                where community.community_id=community_basic.community_id
                and community.county=#{county} group by community.street) as table1
            right join
            -- 当前区域账号下所有的街道，以及街道中所有的社区
            (select street,count(*) as all_count from community
                where community.county=#{county} group by street) as table2
            on table1.street=table2.street
    </select>

    <select id="communityFillInfo" resultType="map" parameterType="map">
        select max(community.street) as street,max(community.community_id) as communityId,
               community.community_name as communityName,count(court_name) as courtFillCount
        from community left join court_basic cb on community.community_id = cb.community_id
        where community.county=#{county} group by community.community_name;
    </select>

    <select id="buildSum" resultType="map" parameterType="map">
        select max(community_id) as communityId,max(court_name) as courtName, indicator_id as indicatorId,count(build_number) as indicatorValue,
               max(meno) as meno,max(report_year) as reportYear,'' as longittude,'' as latitude
        from indicator_value_build
        where court_name=#{courtName} and community_id=#{communityId} and report_year=#{reportYear} group by indicator_id;
    </select>

    <insert id="uploadImg"  parameterType="map">
        insert into build_photo(photo_id,build_number,indicator_id,court_name,community_id,photo_file,photo_path)
        values (#{photo_id},#{build_number},#{indicator_id},#{court_name},#{community_id},#{photo_file},#{photo_path})
    </insert>

    <select id="downloadImg" resultType="map"  parameterType="map">
        SELECT photo_id,community_id,court_name,indicator_id,build_number,photo_path,description,photo_file
        FROM build_photo WHERE (build_number = #{build_number} AND indicator_id = #{indicator_id}
            AND court_name = #{court_name} AND community_id = #{community_id})
    </select>

    <delete id="deleteImg"  parameterType="map">
        delete
        from build_photo
        where photo_id=#{photo_id};
    </delete>

    <select id="initPhotoData" parameterType="map" resultType="map">
        select bb.province,bb.city,bb.county,bb.street,bb.community_name as communityName,build_photo.photo_path as photoPath,build_photo.community_id as communityId,
               build_photo.court_name as courtName,build_photo.build_number as buildNumber,ivb.description,i.indicator_name as indicatorName  from build_photo left join indicator i on build_photo.indicator_id = trim(i.indicator_id)
                                                                                                                  left join indicator_value_build ivb on build_photo.indicator_id = ivb.indicator_id
            and build_photo.build_number=ivb.build_number
            and ivb.court_name=build_photo.court_name
            and ivb.community_id=build_photo.community_id
                                                                                                                  left join build_basic bb on build_photo.build_number=bb.build_number
            and bb.court_name=build_photo.court_name
            and bb.community_id=build_photo.community_id
        <where>
            <if test="communityId!=null and communityId!=''">
                and build_photo.community_id=#{communityId}
            </if>
            <if test="courtName!=null and courtName!=''">
                and build_photo.court_name=#{courtName}
            </if>
            <if test="buildNumber!=null and buildNumber!=''">
                and build_photo.build_number=#{buildNumber}
            </if>
            <if test="province!=null and province!=''">
                and bb.province=#{province}
            </if>
            <if test="city!=null and city!=''">
                and bb.city=#{city}
            </if>
            <if test="county!=null and county!=''">
                and bb.county=#{county}
            </if>
            <if test="street!=null and street!=''">
                and bb.street=#{street}
            </if>
            <if test="state!=null and state!=''">
                and bb.state=#{state}
            </if>
        </where>
    </select>
    <select id="initLocationData" parameterType="map" resultType="map">
        select i.indicator_name as indicatorName,indicator_value.location,  community_basic.community_name as communityName
             ,community_basic.province,community_basic.city,community_basic.county,community_basic.street
        from indicator_value left join community_basic
                                       on community_basic.community_id=indicator_value.community_id
                             left join indicator i on indicator_value.indicator_id = trim(i.indicator_id)
        where indicator_value.court_name='' and indicator_value.location is not null
        <if test="communityId!=null and communityId!=''">
            and indicator_value.community_id=#{communityId}
        </if>
        <if test="province!=null and province!=''">
            and community_basic.province=#{province}
        </if>
        <if test="city!=null and city!=''">
            and community_basic.city=#{city}
        </if>
        <if test="county!=null and county!=''">
        and community_basic.county=#{county}
        </if>
        <if test="street!=null and street!=''">
        and community_basic.street=#{street}
        </if>
        <if test="state!=null and state!=''">
        and community_basic.state=#{state}
        </if>
    </select>

    <select id="compute" resultType="map" parameterType="String">
        select c.community_id as commuityId,court_name as courtName,
               build_number as buildNumber,max(report_year) as reportYear,max(c.city) as city
        from indicator_value_build
                 left join community c
                           on indicator_value_build.community_id = c.community_id
        where c.city=#{city} and indicator_id like '${indicator}%' and indicator_value>0 and report_year=#{reportYear}
        group by c.community_id,court_name,build_number
        having count(indicator_value)>0;
    </select>

    <select id="computeTotal" resultType="int" parameterType="String">
        select count(*) from (select c.community_id as commuityId,court_name as courtName,
               build_number as buildNumber,max(report_year) as reportYear,max(c.city) as city
        from indicator_value_build
                 left join community c
                           on indicator_value_build.community_id = c.community_id
        where c.city=#{city} and indicator_id like '${indicator}%' and report_year=#{reportYear}
        group by c.community_id,court_name,build_number) as t

    </select>

    <select id="computeCountyPercent" resultType="map" parameterType="String">
        select max(city) as city,county,count(*) as num from (select c.community_id as commuityId,court_name as courtName,
                                     build_number as buildNumber,max(report_year) as reportYear,max(c.city) as city,max(county) as county
                              from indicator_value_build
                                       left join community c
                                                 on indicator_value_build.community_id = c.community_id
                              where c.city=#{city} and indicator_id like '${indicator}%' and indicator_value>0 and report_year=#{reportYear}
                              group by c.community_id,court_name,build_number having count(indicator_value)>0) as t group by county

    </select>

    <select id="computeCountyTotal" resultType="int" parameterType="String">
        select count(*) as num from (select c.community_id as commuityId,
                                               court_name as courtName,
                                               build_number as buildNumber,
                                               max(report_year) as reportYear,
                                               max(c.city) as city,
                                               max(county) as county,
                                               max(street) as street
                                        from indicator_value_build
                                                 left join community c
                                                           on indicator_value_build.community_id = c.community_id
                                        where c.county=#{county} and c.city=#{city} and indicator_id like '${indicator}%' and indicator_value>0 and report_year=#{reportYear}
                                        group by c.community_id,court_name,build_number having count(indicator_value)>0) as t

    </select>

    <select id="computeStreetPercent" resultType="map" parameterType="String">
        select max(city) as city,max(county) as county,street,count(*) as num
        from (select c.community_id as commuityId,
                   court_name as courtName,
                   build_number as buildNumber,
                   max(report_year) as reportYear,
                   max(c.city) as city,
                   max(county) as county,
                   max(street) as street
            from indicator_value_build
                     left join community c
                               on indicator_value_build.community_id = c.community_id
            where c.county=#{county} and c.city=#{city} and indicator_id like '${indicator}%' and indicator_value>0 and report_year=#{reportYear}
            group by c.community_id,court_name,build_number having count(indicator_value)>0) as t group by street

    </select>

    <select id="buildProblem" parameterType="String" resultType="map">
        select max(c.community_name) as communityName,max(c.street) as street,max(c.county) as county,c.community_id as communityId,court_name as courtName,
               build_number as buildNumber,max(report_year) as reportYear,max(c.city) as city
        from indicator_value_build
                 left join community c
                           on indicator_value_build.community_id = c.community_id
        where <if test="courtName!=null and courtName!=''">court_name=#{courtName} and</if>
            <if test="communityId!=null and communityId!=''">c.community_id=#{communityId} and</if>
            indicator_id like '${indicator}%' and
            indicator_value>0
        group by c.community_id,court_name,build_number
        having count(indicator_value)>0;
    </select>

    <select id="searchPhoto" parameterType="String" resultType="map">
        select * from build_photo where build_number=#{buildNumber}
                                    and court_name=#{courtName}
                                    and community_id=#{communityId}
                                    and indicator_id like '${indicatorId}%'
    </select>



</mapper>