<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.atv.dao.mapper.AtvService">

    <select id="streetFillInfo" resultType="map" parameterType="map">
        select table2.street,IFNULL(fill_count,0) as fillCount,all_count as allCount,IFNULL(all_count-fill_count,all_count) as unfillCount from
            -- 当前区域账号下所有街道，以及街道中已经填报的社区
            (select community.street,count(*) as fill_count from community,community_basic
                where community.community_id=community_basic.community_id
                and community.county=#{county} group by community.street) as table1
            right join
            -- 当前区域账号下所有的街道，以及街道中所有的社区
            (select street,count(*) as all_count from community
                where community.county=#{county} group by street) as table2
            on table1.street=table2.street
    </select>

    <select id="communityFillInfo" resultType="map" parameterType="map">
        select max(community.street) as street,max(community.community_id) as communityId,
               community.community_name as communityName,count(court_name) as courtFillCount
        from community left join court_basic cb on community.community_id = cb.community_id
        where community.county=#{county} group by community.community_name;
    </select>

    <select id="buildSum" resultType="map" parameterType="map">
        select max(community_id) as communityId,max(court_name) as courtName, indicator_id as indicatorId,count(build_number) as indicatorValue,
               max(meno) as meno,max(report_year) as reportYear,'' as longittude,'' as latitude
        from indicator_value_build
        where court_name=#{courtName} and community_id=#{communityId} and report_year=#{reportYear} group by indicator_id;
    </select>

    <insert id="uploadImg"  parameterType="map">
        insert into build_photo(build_number,indicator_id,court_name,community_id,photo_file,photo_path)
        values (#{build_number},#{indicator_id},#{court_name},#{community_id},#{photo_file},#{photo_path})
    </insert>

    <select id="downloadImg" resultType="map"  parameterType="map">
        SELECT community_id,court_name,indicator_id,build_number,photo_path,description,photo_file
        FROM build_photo WHERE (build_number = #{build_number} AND indicator_id = #{indicator_id}
            AND court_name = #{court_name} AND community_id = #{community_id})
    </select>

</mapper>